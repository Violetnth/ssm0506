<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shelley.dao.EmployeeDao">

    <resultMap id="BaseResultMap" type="com.shelley.entity.Employee">
        <!--@Table employee-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="did" column="did" jdbcType="INTEGER"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="WithDeptBaseResultMap" type="employee">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="gender" property="gender"></result>
        <result column="email" property="email"></result>
        <result column="did" property="did"></result>
        <!-- 指定联合查询出的部门的字段封装 -->
        <association property="dept" javaType="dept">
            <id column="did" property="id"></id>
            <result column="dname" property="name"></result>
        </association>
    </resultMap>

    <!--批量删除-->
    <delete id="deleteBatch">

    </delete>

    <!-- 查询所有员工带有部门信息 -->
    <select id="selectEmpWithDept" resultMap="WithDeptBaseResultMap">
        select e.id,
               e.name,
               e.gender,
               e.email,
               e.did  did,
               d.name dname
        from employee e
                 left join dept d
                 on
                 e.did = d.id
    </select>
    <!-- 根据主键查询员工带有部门信息 -->
    <select id="selectEmpWithDeptByPrimaryKey" resultMap="WithDeptBaseResultMap">
        select e.id,
               e.name,
               e.gender,
               e.email,
               e.did  did,
               d.name dname
        from employee e
                 left join dept d
                on
                e.did = d.id
        where e.id = #{id}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select id,
               name,
               did,
               gender,
               email
        from ssm.employee
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select id,
               name,
               did,
               gender,
               email
        from ssm.employee limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        id, name, did, gender, email
        from ssm.employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="did != null">
                and did = #{did}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into ssm.employee(name, did, gender, email)
        values (#{name}, #{did}, #{gender}, #{email})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ssm.employee
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="did != null">
                did = #{did},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from ssm.employee
        where id = #{id}
    </delete>

</mapper>